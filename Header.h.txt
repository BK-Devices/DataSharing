#ifndef Header_H_
#define Header_H_

#include <stdio.h>      // standard input / output functions
#include <stdlib.h>
#include <string.h>     // string function definitions
#include <unistd.h>     // UNIX standard function definitions
#include <fcntl.h>      // File control definitions
#include <errno.h>      // Error number definitions
#include <signal.h>	// Single handling
#include <termios.h>    // POSIX terminal control definitions

#include <sys/types.h>
#include <netinet/in.h> //structure for storing address information 
#include <sys/socket.h> //for socket APIs 


// Serial Communication necessaries
#define USBPORT "/dev/ttyUSB0"
#define BAUD B38400

// Ethernet Communication necessaries
#define ServerIP "192.168.168.2"
#define ServerPORT 5000

// Output files path
#define path1 "Output\DLinkRaw.txt"
#define path2 "Output\ULinkRaw.txt"
#define path3 "Output\Decoded\Battery.txt"
#define path4 "Output\Decoded\PosVel.txt"
#define path5 "Output\Decoded\Strain.txt"
#define path6 "Output\Decoded\Rates.txt"
#define path7 "Output\Decoded\EMA.txt"
#define path8 "Output\Decoded\Vib3.txt"
#define path9 "Output\Decoded\Vib4.txt"
#define path10 "Output\Decoded\ULink.txt"

#define SEND_DELAY 180 // Milliseconds


// Typedef datatypes
typedef char s8;
typedef unsigned char u8;

typedef short int s16;
typedef unsigned short int u16;

typedef int s32;
typedef unsigned int u32;

#pragma pack(1)

// Downlink data format
struct DownLink_Data
{
	// Receiving 129 bytes of data

	s16 Header;
	u8 EventStatus;
	u8 SFID;
	s16 NavTime;
	u8 Pos[3];
	u8 Vel[3];
	u8 Rates[3];
	u8 Acc[3]
	u8 Byte;
	u8 EMA_CMD[4];
	u8 S_Sen1[3];
	u8 S_Sen2[3];
	u8 S_Sen3[3];
	u8 Vib3[48];
	u8 Vib4[48];
	u8 ChkSum;
} D_LIN;


// Uplink data format
struct UpLink_Data
{
	// Sending 35 bytes of data
	char data[35];
} U_LIN;

#pragma pack()

void sigalrm_handler(int);
void configUsbPort(void);
void sendData(void);
void openFiles(void);

#endif
